// @generated by protobuf-ts 2.8.1 with parameter long_type_number,output_javascript
// @generated from protobuf file "invoices.proto" (package "invoicesrpc", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { RouteHint } from "./lightning";
/**
 * @generated from protobuf message invoicesrpc.CancelInvoiceMsg
 */
export interface CancelInvoiceMsg {
    /**
     * Hash corresponding to the (hold) invoice to cancel. When using
     * REST, this field must be encoded as base64.
     *
     * @generated from protobuf field: bytes payment_hash = 1;
     */
    paymentHash: Uint8Array;
}
/**
 * @generated from protobuf message invoicesrpc.CancelInvoiceResp
 */
export interface CancelInvoiceResp {
}
/**
 * @generated from protobuf message invoicesrpc.AddHoldInvoiceRequest
 */
export interface AddHoldInvoiceRequest {
    /**
     *
     * An optional memo to attach along with the invoice. Used for record keeping
     * purposes for the invoice's creator, and will also be set in the description
     * field of the encoded payment request if the description_hash field is not
     * being used.
     *
     * @generated from protobuf field: string memo = 1;
     */
    memo: string;
    /**
     * The hash of the preimage
     *
     * @generated from protobuf field: bytes hash = 2;
     */
    hash: Uint8Array;
    /**
     *
     * The value of this invoice in satoshis
     *
     * The fields value and value_msat are mutually exclusive.
     *
     * @generated from protobuf field: int64 value = 3;
     */
    value: number;
    /**
     *
     * The value of this invoice in millisatoshis
     *
     * The fields value and value_msat are mutually exclusive.
     *
     * @generated from protobuf field: int64 value_msat = 10;
     */
    valueMsat: number;
    /**
     *
     * Hash (SHA-256) of a description of the payment. Used if the description of
     * payment (memo) is too long to naturally fit within the description field
     * of an encoded payment request.
     *
     * @generated from protobuf field: bytes description_hash = 4;
     */
    descriptionHash: Uint8Array;
    /**
     * Payment request expiry time in seconds. Default is 3600 (1 hour).
     *
     * @generated from protobuf field: int64 expiry = 5;
     */
    expiry: number;
    /**
     * Fallback on-chain address.
     *
     * @generated from protobuf field: string fallback_addr = 6;
     */
    fallbackAddr: string;
    /**
     * Delta to use for the time-lock of the CLTV extended to the final hop.
     *
     * @generated from protobuf field: uint64 cltv_expiry = 7;
     */
    cltvExpiry: number;
    /**
     *
     * Route hints that can each be individually used to assist in reaching the
     * invoice's destination.
     *
     * @generated from protobuf field: repeated lnrpc.RouteHint route_hints = 8;
     */
    routeHints: RouteHint[];
    /**
     * Whether this invoice should include routing hints for private channels.
     *
     * @generated from protobuf field: bool private = 9;
     */
    private: boolean;
}
/**
 * @generated from protobuf message invoicesrpc.AddHoldInvoiceResp
 */
export interface AddHoldInvoiceResp {
    /**
     *
     * A bare-bones invoice for a payment within the Lightning Network. With the
     * details of the invoice, the sender has all the data necessary to send a
     * payment to the recipient.
     *
     * @generated from protobuf field: string payment_request = 1;
     */
    paymentRequest: string;
    /**
     *
     * The "add" index of this invoice. Each newly created invoice will increment
     * this index making it monotonically increasing. Callers to the
     * SubscribeInvoices call can use this to instantly get notified of all added
     * invoices with an add_index greater than this one.
     *
     * @generated from protobuf field: uint64 add_index = 2;
     */
    addIndex: number;
    /**
     *
     * The payment address of the generated invoice. This value should be used
     * in all payments for this invoice as we require it for end to end
     * security.
     *
     * @generated from protobuf field: bytes payment_addr = 3;
     */
    paymentAddr: Uint8Array;
}
/**
 * @generated from protobuf message invoicesrpc.SettleInvoiceMsg
 */
export interface SettleInvoiceMsg {
    /**
     * Externally discovered pre-image that should be used to settle the hold
     * invoice.
     *
     * @generated from protobuf field: bytes preimage = 1;
     */
    preimage: Uint8Array;
}
/**
 * @generated from protobuf message invoicesrpc.SettleInvoiceResp
 */
export interface SettleInvoiceResp {
}
/**
 * @generated from protobuf message invoicesrpc.SubscribeSingleInvoiceRequest
 */
export interface SubscribeSingleInvoiceRequest {
    /**
     * Hash corresponding to the (hold) invoice to subscribe to. When using
     * REST, this field must be encoded as base64url.
     *
     * @generated from protobuf field: bytes r_hash = 2;
     */
    rHash: Uint8Array;
}
/**
 * @generated from protobuf message invoicesrpc.LookupInvoiceMsg
 */
export interface LookupInvoiceMsg {
    /**
     * @generated from protobuf oneof: invoice_ref
     */
    invoiceRef: {
        oneofKind: "paymentHash";
        /**
         * When using REST, this field must be encoded as base64.
         *
         * @generated from protobuf field: bytes payment_hash = 1;
         */
        paymentHash: Uint8Array;
    } | {
        oneofKind: "paymentAddr";
        /**
         * @generated from protobuf field: bytes payment_addr = 2;
         */
        paymentAddr: Uint8Array;
    } | {
        oneofKind: "setId";
        /**
         * @generated from protobuf field: bytes set_id = 3;
         */
        setId: Uint8Array;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf field: invoicesrpc.LookupModifier lookup_modifier = 4;
     */
    lookupModifier: LookupModifier;
}
/**
 * @generated from protobuf enum invoicesrpc.LookupModifier
 */
export declare enum LookupModifier {
    /**
     * The default look up modifier, no look up behavior is changed.
     *
     * @generated from protobuf enum value: DEFAULT = 0;
     */
    DEFAULT = 0,
    /**
     *
     * Indicates that when a look up is done based on a set_id, then only that set
     * of HTLCs related to that set ID should be returned.
     *
     * @generated from protobuf enum value: HTLC_SET_ONLY = 1;
     */
    HTLC_SET_ONLY = 1,
    /**
     *
     * Indicates that when a look up is done using a payment_addr, then no HTLCs
     * related to the payment_addr should be returned. This is useful when one
     * wants to be able to obtain the set of associated setIDs with a given
     * invoice, then look up the sub-invoices "projected" by that set ID.
     *
     * @generated from protobuf enum value: HTLC_SET_BLANK = 2;
     */
    HTLC_SET_BLANK = 2
}
declare class CancelInvoiceMsg$Type extends MessageType<CancelInvoiceMsg> {
    constructor();
    create(value?: PartialMessage<CancelInvoiceMsg>): CancelInvoiceMsg;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CancelInvoiceMsg): CancelInvoiceMsg;
    internalBinaryWrite(message: CancelInvoiceMsg, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message invoicesrpc.CancelInvoiceMsg
 */
export declare const CancelInvoiceMsg: CancelInvoiceMsg$Type;
declare class CancelInvoiceResp$Type extends MessageType<CancelInvoiceResp> {
    constructor();
    create(value?: PartialMessage<CancelInvoiceResp>): CancelInvoiceResp;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CancelInvoiceResp): CancelInvoiceResp;
    internalBinaryWrite(message: CancelInvoiceResp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message invoicesrpc.CancelInvoiceResp
 */
export declare const CancelInvoiceResp: CancelInvoiceResp$Type;
declare class AddHoldInvoiceRequest$Type extends MessageType<AddHoldInvoiceRequest> {
    constructor();
    create(value?: PartialMessage<AddHoldInvoiceRequest>): AddHoldInvoiceRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddHoldInvoiceRequest): AddHoldInvoiceRequest;
    internalBinaryWrite(message: AddHoldInvoiceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message invoicesrpc.AddHoldInvoiceRequest
 */
export declare const AddHoldInvoiceRequest: AddHoldInvoiceRequest$Type;
declare class AddHoldInvoiceResp$Type extends MessageType<AddHoldInvoiceResp> {
    constructor();
    create(value?: PartialMessage<AddHoldInvoiceResp>): AddHoldInvoiceResp;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddHoldInvoiceResp): AddHoldInvoiceResp;
    internalBinaryWrite(message: AddHoldInvoiceResp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message invoicesrpc.AddHoldInvoiceResp
 */
export declare const AddHoldInvoiceResp: AddHoldInvoiceResp$Type;
declare class SettleInvoiceMsg$Type extends MessageType<SettleInvoiceMsg> {
    constructor();
    create(value?: PartialMessage<SettleInvoiceMsg>): SettleInvoiceMsg;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettleInvoiceMsg): SettleInvoiceMsg;
    internalBinaryWrite(message: SettleInvoiceMsg, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message invoicesrpc.SettleInvoiceMsg
 */
export declare const SettleInvoiceMsg: SettleInvoiceMsg$Type;
declare class SettleInvoiceResp$Type extends MessageType<SettleInvoiceResp> {
    constructor();
    create(value?: PartialMessage<SettleInvoiceResp>): SettleInvoiceResp;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SettleInvoiceResp): SettleInvoiceResp;
    internalBinaryWrite(message: SettleInvoiceResp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message invoicesrpc.SettleInvoiceResp
 */
export declare const SettleInvoiceResp: SettleInvoiceResp$Type;
declare class SubscribeSingleInvoiceRequest$Type extends MessageType<SubscribeSingleInvoiceRequest> {
    constructor();
    create(value?: PartialMessage<SubscribeSingleInvoiceRequest>): SubscribeSingleInvoiceRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SubscribeSingleInvoiceRequest): SubscribeSingleInvoiceRequest;
    internalBinaryWrite(message: SubscribeSingleInvoiceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message invoicesrpc.SubscribeSingleInvoiceRequest
 */
export declare const SubscribeSingleInvoiceRequest: SubscribeSingleInvoiceRequest$Type;
declare class LookupInvoiceMsg$Type extends MessageType<LookupInvoiceMsg> {
    constructor();
    create(value?: PartialMessage<LookupInvoiceMsg>): LookupInvoiceMsg;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LookupInvoiceMsg): LookupInvoiceMsg;
    internalBinaryWrite(message: LookupInvoiceMsg, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message invoicesrpc.LookupInvoiceMsg
 */
export declare const LookupInvoiceMsg: LookupInvoiceMsg$Type;
/**
 * @generated ServiceType for protobuf service invoicesrpc.Invoices
 */
export declare const Invoices: any;
export {};
