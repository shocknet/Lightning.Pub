import 'dotenv/config'
import NewServer from '../proto/autogenerated/ts/express_server.js'
import GetServerMethods from './services/serverMethods/index.js'
import serverOptions from './auth.js';
import Storage from './services/storage/index.js'
import { LoadNosrtSettingsFromEnv } from './services/nostr/index.js'
import nostrMiddleware from './nostrMiddleware.js'
import { TypeOrmMigrationRunner } from './services/storage/migrations/runner.js';
import { getLogger } from './services/helpers/logger.js';
import { initMainHandler } from './services/main/init.js';
import { LoadMainSettingsFromEnv } from './services/main/settings.js';

const start = async () => {
    const log = getLogger({})
    const mainSettings = LoadMainSettingsFromEnv()
    const keepOn = await initMainHandler(log, mainSettings)
    if (!keepOn) {
        log("manual process ended")
        return
    }
    const { apps, mainHandler } = keepOn
    const serverMethods = GetServerMethods(mainHandler)
    const nostrSettings = LoadNosrtSettingsFromEnv()
    const { Send } = nostrMiddleware(serverMethods, mainHandler, { ...nostrSettings, apps })
    mainHandler.attachNostrSend(Send)
    const Server = NewServer(serverMethods, serverOptions(mainHandler))
    Server.Listen(mainSettings.servicePort)
}
start()
