import 'dotenv/config'
import NewServer from '../proto/autogenerated/ts/express_server.js'
import GetServerMethods from './services/serverMethods/index.js'
import serverOptions from './auth.js';
import Main, { LoadMainSettingsFromEnv } from './services/main/index.js'
import { LoadNosrtSettingsFromEnv } from './services/nostr/index.js'
import nostrMiddleware from './nostrMiddleware.js'

const start = async () => {
    const mainSettings = LoadMainSettingsFromEnv()
    const mainHandler = new Main(mainSettings)
    await mainHandler.storage.Connect()
    await mainHandler.lnd.Warmup()
    const serverMethods = GetServerMethods(mainHandler)
    const nostrSettings = LoadNosrtSettingsFromEnv()
    nostrMiddleware(serverMethods, mainHandler, nostrSettings)
    const Server = NewServer(serverMethods, serverOptions(mainHandler))
    if (process.argv[2] === 'unlock') {
        const u = process.argv[3]
        if (u) {
            console.log("unlocking user", u)
            await mainHandler.storage.userStorage.UnlockUser(u)
        } else {
            console.log("no user id found to unlock")
        }
    }
    Server.Listen(mainSettings.servicePort)
}
start()
