"use strict";
// This file was autogenerated from a .proto file, DO NOT EDIT!
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmptyValidate = exports.EmptyOptionalFields = exports.EncryptionExchangeRequestValidate = exports.EncryptionExchangeRequestOptionalFields = void 0;
exports.EncryptionExchangeRequestOptionalFields = [];
var EncryptionExchangeRequestValidate = function (o, opts, path) {
    if (opts === void 0) { opts = {}; }
    if (path === void 0) { path = 'EncryptionExchangeRequest::root.'; }
    if (opts.checkOptionalsAreSet && opts.allOptionalsAreSet)
        return new Error(path + ': only one of checkOptionalsAreSet or allOptionalNonDefault can be set for each message');
    if (typeof o !== 'object' || o === null)
        return new Error(path + ': object is not an instance of an object or is null');
    if (typeof o.public_key !== 'string')
        return new Error("".concat(path, ".public_key: is not a string"));
    if (opts.public_key_CustomCheck && !opts.public_key_CustomCheck(o.public_key))
        return new Error("".concat(path, ".public_key: custom check failed"));
    if (typeof o.device_id !== 'string')
        return new Error("".concat(path, ".device_id: is not a string"));
    if (opts.device_id_CustomCheck && !opts.device_id_CustomCheck(o.device_id))
        return new Error("".concat(path, ".device_id: custom check failed"));
    return null;
};
exports.EncryptionExchangeRequestValidate = EncryptionExchangeRequestValidate;
exports.EmptyOptionalFields = [];
var EmptyValidate = function (o, opts, path) {
    if (opts === void 0) { opts = {}; }
    if (path === void 0) { path = 'Empty::root.'; }
    if (opts.checkOptionalsAreSet && opts.allOptionalsAreSet)
        return new Error(path + ': only one of checkOptionalsAreSet or allOptionalNonDefault can be set for each message');
    if (typeof o !== 'object' || o === null)
        return new Error(path + ': object is not an instance of an object or is null');
    return null;
};
exports.EmptyValidate = EmptyValidate;
//# sourceMappingURL=types.js.map